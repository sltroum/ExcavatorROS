/*
 * epos_manager.cpp
 *
 *  Created on: Feb 22, 2017
 *      Author: yutak
 */

#include <stdio.h>

#include <ros/ros.h>
#include <std_msgs/Float64.h>
#include <epos_library/Definitions.h>

class EposManager {
public:
	EposManager();

private:
	void EposManager::joyCallbackBoom(const std_msgs::Float64::ConstPtr& val);
	void EposManager::joyCallbackArm(const std_msgs::Float64::ConstPtr& val);

	ros::NodeHandle n;
	ros::Subscriber sub_joy_boom, sub_joy_arm, sub_joy_bucket, sub_joy_swing;
	void* pHandleBoom, pHandleArm;
};

EposManager::EposManager() {
	unsigned int err;
	pHandleBoom = VCS_OpenDevice("EPOS2", "CANopen", "USB", "USB0", &err);
	printf("ErrorCode:%x", err);
	pHandleArm = VCS_OpenDevice("EPOS2", "CANopen", "USB", "USB1", &err);
	printf("ErrorCode:%x", err);

	sub_joy_boom = n.subscribe<std_msgs::Float64>(
			"val_joy_boom", 10, &EposManager::joyCallbackBoom, this);
	sub_joy_arm = n.subscribe<std_msgs::Float64>(
			"val_joy_arm", 10, &EposManager::joyCallbackArm, this);
}

void EposManager::joyCallbackBoom(const std_msgs::Float64::ConstPtr& val) {
	unsigned int err;
	unsigned short nodeID = 31;
	long vel = long(val * 10.0);

	//VCS_SetVelocityMust( nodeID, vel, &err);
}

void EposManager::joyCallbackArm(const std_msgs::Float64::ConstPtr& val) {
	//VCS_SetVelocityMust();
}

int main(int argc, char** argv) {
	ros::init(argc, argv, "epos_manager");
	EposManager em;

	ros::spin();
}
