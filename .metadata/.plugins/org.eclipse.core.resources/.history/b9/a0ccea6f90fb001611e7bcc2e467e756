#!/usr/bin/python
'''
Created on Feb 24, 2017

@author: yutak
'''

import rospy
import std_msgs.msg as msg

class SpeedCommander:
    def __init__(self):
        self.rate = 100 #[Hz]
        
        self.joy_val_boom = 0.0
        self.joy_val_arm = 0.0
        self.joy_val_bucket = 0.0
        self.joy_val_swing = 0.0
        
        rospy.init_node('speed_commander', anonymous=True)
        
        self.sub_joy_boom = rospy.Subscriber('joy_val_boom', msg.Float64,
                                             self.cb_joy_boom)
        self.sub_joy_arm = rospy.Subscriber('joy_val_arm', msg.Float64,
                                            self.cb_joy_arm)
        self.sub_joy_bucket = rospy.Subscriber('joy_val_bucket', msg.Float64,
                                               self.cb_joy_bucket)
        self.sub_joy_swing = rospy.Subscriber('joy_val_swing', msg.Float64,
                                               self.cb_joy_swing)
        
        self.pub_spd_boom = rospy.Publisher('spd_com_boom',msg.Float64,
                                            queue_size=10)
        self.pub_spd_arm = rospy.Publisher('spd_com_arm',msg.Float64,
                                           queue_size=10)
        self.pub_spd_bucket = rospy.Publisher('spd_com_bucket',msg.Float64,
                                              queue_size=10)
        self.pub_spd_swing = rospy.Publisher('spd_com_swing',msg.Float64,
                                             queue_size=10)
    
    def cb_joy_boom(self, val):
        self.joy_val_boom = val.data
        
    def cb_joy_arm(self, val):
        self.joy_val_arm = val.data
        
    def cb_joy_bucket(self, val):
        self.joy_val_bucket = val.data
        
    def cb_joy_swing(self, val):
        self.joy_val_swing = val.data
    
    def update(self):
        r = rospy.Rate(self.rate)
        
        # Main Loop
        while not rospy.is_shutdown():
            spd_com_boom = self.joy_val_boom * 10.0
            spd_com_arm = self.joy_val_arm * 10.0
            spd_com_bucket = self.joy_val_bucket * 0.5
            spd_com_swing = self.joy_val_swing * 0.0
            
            self.pub_spd_boom.publish(spd_com_boom)
            self.pub_spd_arm.publish(spd_com_arm)
            self.pub_spd_bucket.publish(spd_com_bucket)
            self.pub_spd_swing.publish(spd_com_swing)
            
            r.sleep()
            
if __name__ == '__main__':
    sc = SpeedCommander()
    
    try:
        sc.update()

    except rospy.ROSInterruptException:
        pass