// Generated by gencpp from file ros_gpio/OpenUart.msg
// DO NOT EDIT!


#ifndef ROS_GPIO_MESSAGE_OPENUART_H
#define ROS_GPIO_MESSAGE_OPENUART_H

#include <ros/service_traits.h>


#include <ros_gpio/OpenUartRequest.h>
#include <ros_gpio/OpenUartResponse.h>


namespace ros_gpio
{

struct OpenUart
{

typedef OpenUartRequest Request;
typedef OpenUartResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct OpenUart
} // namespace ros_gpio


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_gpio::OpenUart > {
  static const char* value()
  {
    return "09a5a8266af8d6f25a1d421823e44e03";
  }

  static const char* value(const ::ros_gpio::OpenUart&) { return value(); }
};

template<>
struct DataType< ::ros_gpio::OpenUart > {
  static const char* value()
  {
    return "ros_gpio/OpenUart";
  }

  static const char* value(const ::ros_gpio::OpenUart&) { return value(); }
};


// service_traits::MD5Sum< ::ros_gpio::OpenUartRequest> should match 
// service_traits::MD5Sum< ::ros_gpio::OpenUart > 
template<>
struct MD5Sum< ::ros_gpio::OpenUartRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_gpio::OpenUart >::value();
  }
  static const char* value(const ::ros_gpio::OpenUartRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_gpio::OpenUartRequest> should match 
// service_traits::DataType< ::ros_gpio::OpenUart > 
template<>
struct DataType< ::ros_gpio::OpenUartRequest>
{
  static const char* value()
  {
    return DataType< ::ros_gpio::OpenUart >::value();
  }
  static const char* value(const ::ros_gpio::OpenUartRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_gpio::OpenUartResponse> should match 
// service_traits::MD5Sum< ::ros_gpio::OpenUart > 
template<>
struct MD5Sum< ::ros_gpio::OpenUartResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_gpio::OpenUart >::value();
  }
  static const char* value(const ::ros_gpio::OpenUartResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_gpio::OpenUartResponse> should match 
// service_traits::DataType< ::ros_gpio::OpenUart > 
template<>
struct DataType< ::ros_gpio::OpenUartResponse>
{
  static const char* value()
  {
    return DataType< ::ros_gpio::OpenUart >::value();
  }
  static const char* value(const ::ros_gpio::OpenUartResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_GPIO_MESSAGE_OPENUART_H
